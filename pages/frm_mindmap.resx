<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbx_mindmap.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAABK9JREFUWEftl21sFEUYx9c3fIsSSmRmjqulzfHS2oqRYAi0M2c9adEmKhZqerYa
        OIo1BGoRRSRew93tHBHQtuftHnwwaeCD/eIno8FIGiGYKAkCBYJtaW13z5bUQAvGiqlj5ryte9Or3bYH
        jUn/yZNcJnPP/5d5efYZSZrRjGY0cdntK+6HEG8HiFyAkBxFCL8kSdId4rxpE0BkP0SEJQTEP0KI1047
        aFraUw9DRG5yKADxaQBxvwB7FkJSKknSneJ/b4vmzHHNhogM/7NqJDh37sqH5iG8azQoPgcAXj8toACS
        b+MgffLJnQ5Vo+fqf/INFm12H4c28qsA2gpsBWW3FRRC8qoB4PZ5vlB1yoxobPcNvVBbccJmd/aZQQEi
        5yHElZK07i4xX8rlcBTfCxC5wo2zlxVfMgOOgLb5/3xxR+X3tnRnbJ4pOhDCVZJE7hbzplQAkX1xw7/8
        J97/XQQ0oqHNP/zyO6+dt6U7E7YeQPyVmDOlstnyF3E4blZYUdYqgonR2OFnZbs3XJ6fEQeFRDdyZWSQ
        +xKzp0gQkW+4GbKTa6HOwCioZBG67Gcb6qsvVatb3+A5ACBOAPEQgPjiPITLU3pG+e00tszzcXWXCDNe
        KDo97apYHxG2/iJCBe6UgObk5MyCCPfyxIuWrm4XAaxEuFtm5Xs8UXtm4dVbAgohpkbSupZdN0QAq8G3
        3u3f1J+eVTiQBPRJ0deyACjINL4spGxdwmX54OudbMfnb08otjfXsuIq93X7gqd/+xeSDDxiJw7R27J4
        yeCJ0HznYPhnOQa3sb7aXPumHADhA6KvZRmAAOKroU7/qVsBmF9a+sOh7v1pove4Mm8xhLhB0QMbp7LF
        tZ/VspItFWzBYtcI3KNZz7DAyd1M0eRBVZO9jDHrLZ35kgBAcpt++fBBRZeviZdgvGho97PKvVXMkfts
        wso9tuI5VnfsvYS54ahcIXIklbnMAIiP87HIqcg9ik6jIsBYwcFe37eZLcxbnQCWvXwN29T4JjPOtDki
        OvWILEllLtS8w+FjajSwVkyYLMYCy135PKs+uCVWH8X/KLp8U9HlkJd5rTUaEJFj8dXrN76nqiYfFRMn
        A3MIYHmr/guM/qFqtCnULVsvNbwuGc0C72z4WLiXZqkaHRYNYmBtkwDT5BuKRusP9gTtov+4Sng4QZzN
        x1SN7hVNRsCEw/94/thgqkavc7BIlx+JvpZkblh5R8PHmlu9s1RN7jNMPukKsHKfh2UuTgRbWlDCtjbV
        MKUnKdiAotHgpOqdWeaWP/4wksJa8BWzmdvnGQW2jYNpo8EUjV5RdFoX6QjOFr0mJfOjiZcaPhbq8reY
        S0LN4RpmS3eyJ0hJ7PcYYL2qTt+N6N4HRI9JK9mzM3v5mgOZS1xsYV4R++jCnhGAMZtYTe5UdLrt005v
        6jtpDmQ83CEkZ8zvYWRzxj5Jo4CMFdPldjVKqyzXscnK9GAaCb6VvFUSoeJgZ5UeWtnMmqfWfFoVL8oI
        kRr+1l2yrOhMzZG3kp4xVZe/C2tyyYQ+7qmWolNFBFM02hLRqEucOy1S9MAqVZeH4mBfRvRgvjhn2nWo
        NwBCUV+GOD6j/4P+Bs+NTc1oID9OAAAAAElFTkSuQmCC
</value>
  </data>
</root>